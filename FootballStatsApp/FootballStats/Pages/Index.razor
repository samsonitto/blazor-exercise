@page "/"
@using FootballStats.Data
@inject MatchAPI MatchApi
@inject NavigationManager navManager;

<div class="text-center">
    <h2 class="display-4" style="color:#006622">VEIKKAUSLIIGA: RESULTS</h2>
    <input class="form-control" @bind-value="searchTerm" @bind-value:event="oninput" placeholder="Search by the team name" />
</div>
@if (data != null)
{
    <table class="table table-hover table-striped">
        <tbody>
            @foreach (var m in filteredData)
            {
                // Printing out the matches
                <tr class="tr-pointer" @onclick="@(e => showStats(m.Id))">
                    <td>@m.MatchDate.ToString()</td>
                    <td>@m.HomeTeam.Name.ToString()</td>
                    <td>@m.HomeGoals.ToString() : @m.AwayGoals.ToString()</td>
                    <td>@m.AwayTeam.Name.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-danger" role="alert">
        JSON API Error: @MatchAPI.error Reload the page to try again.
    </div>
}

@code{
    private List<Match> data;
    public string url = "/matchstats";
    public string searchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        // Getting the results data from MatchAPI class
        data = MatchApi.GetMatches();
        await base.OnInitializedAsync();
    }

    private void showStats(int id)
    {
        //Redirecting to the match events page
        navManager.NavigateTo(url + "/" + id);
    }

    //Filtering the fixture list by the search criteria
    List<Match> filteredData => data.Where(i => (i.HomeTeam.Name.ToLower().Contains(searchTerm.ToLower())) || (i.AwayTeam.Name.ToLower().Contains(searchTerm.ToLower()))).ToList();
}